***************************
**** Registering Users ****
***************************

Here is the api endpoint for user registration I created.
The only difference between my version and the instructor one is the validation of email address to prevent duplicates.
One thing that both my And the instructors version has a problem with is it returns the user password in the response.
This will be addressed in the next lecture.

users.js
````````````````````````````````````````````````````````````````````````````````````````````````````````````````

const { Users, validateUser } = require("../models/user");
const express = require("express");
const router = express.Router();

////////////////////
//! REGISTER USER
////////////////////
//* Expected input format: {"name": "string", "email": "string", "password": "string"}

router.post("/", async (req, res) => {
  const { error } = validateUser(req.body);
  if (error) return res.status(400).send(error.details[0].message);

  // Make sure the email address is not already used.
  let user = await Users.findOne({ email: req.body.email });
  if (user) return res.status(400).send("User already registered.");

  try {
    user = new Users({
      name: req.body.name,
      email: req.body.email,
      password: req.body.password
    });
    await user.save();
    res.send(user);
  } catch (ex) {
    res.status(500).send(ex.message);
  }
});

////////////////////////
//! Exports
////////////////////////
module.exports = router;
