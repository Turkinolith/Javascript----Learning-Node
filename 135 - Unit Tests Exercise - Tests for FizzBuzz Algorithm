****************************
**** Exercise - FizzBuz ****
****************************
Task: Create unit tests for the FizzBuzz algorithm


	module.exports.fizzBuzz = function(input) { 
	  if (typeof input !== 'number') 
		throw new Error('Input should be a number.');
		
	  if ((input % 3 === 0) && (input % 5) === 0)
		return 'FizzBuzz';

	  if (input % 3 === 0)
		return 'Fizz';

	  if (input % 5 === 0)
		return 'Buzz'; 

	  return input; 
	}


5 execution paths to be tested.


Test code:
const ex1 = require("../exercise1");

describe("fizzBuzz", () => {
  test.each([null, undefined, "a", false, {}])(
    "given %p as argument, should throw exception if input is not a number",
    firstArg => {
      expect(() => {
        ex1.fizzBuzz(firstArg);
      }).toThrow();
    }
  );

  it("should return FizzBuzz if divisible by 3 && 5", () => {
    const result = ex1.fizzBuzz(15);
    expect(result).toBe("FizzBuzz");
  });

  it("should return Fizz if only divisible by 3", () => {
    const result = ex1.fizzBuzz(3);
    expect(result).toBe("Fizz");
  });

  it("should return Buzz if only divisible by 5", () => {
    const result = ex1.fizzBuzz(5);
    expect(result).toBe("Buzz");
  });

  it("should return input if not divisible by 3 or 5", () => {
    const result = ex1.fizzBuzz(1);
    expect(result).toBe(1);
  });
});
